% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sigfit_estimation.R
\name{extract_signatures}
\alias{extract_signatures}
\title{Extract signatures from a set of mutation counts}
\usage{
extract_signatures(counts, nsignatures, model = "nmf",
  opportunities = NULL, sig_prior = NULL, exp_prior = 1,
  stanfunc = "sampling", chains = 1, ...)
}
\arguments{
\item{counts}{Integer matrix of observed mutation counts, with one row per sample and
one column per mutation type. Any decimal values will be rounded to integers.}

\item{nsignatures}{Integer or integer vector indicating the number(s) of signatures to extract.}

\item{model}{Character indicating the model to sample from. Admits values \code{"nmf"} 
(the default) or \code{"emu"}.}

\item{opportunities}{Numeric matrix of optional mutational opportunities for the "EMu" model
(\code{model = "emu"}). Must be a matrix with same dimension as \code{counts}.
Alternatively, it also admits character values \code{"human-genome"} or \code{"human-exome"},
in which case the reference human genome/exome opportunities will be used for every sample.}

\item{sig_prior}{Numeric matrix with one row per signature and one column per mutation type, 
to be used as the Dirichlet priors for the signatures to be extracted. Only used when 
\code{nsignatures} is a scalar. Default priors are uniform (uninformative).}

\item{exp_prior}{Numeric; hyperparameter of the Dirichlet prior given to the exposures. 
Default value is 1 (uniform, uninformative).}

\item{stanfunc}{Character indicating the choice of rstan inference strategy. 
Admits values \code{"sampling"}, \code{"optimizing"} and \code{"vb"}. The default value is
\code{"sampling"}, which corresponds to the full Bayesian MCMC approach. Alternatively, 
\code{"optimizing"} returns the Maximum a Posteriori (MAP) point estimates via numerical 
optimization, while \code{"vb"} uses Variational Bayes to approximate the full posterior.}

\item{...}{Any additional parameters to be passed to the sampling function (by default, 
\code{rstan::sampling}). (Note that the number of chains is set to 1 and cannot 
be changed, in order to prevent 'label switching' problems.)}
}
\value{
A list with two elements:
\itemize{
 \item{\code{$data}: list containing the input data supplied to the model.}
 \item{\code{$result}: object of class stanfit, containing the output MCMC samples,
 as well as information about the model and sampling process.}}
The model parameters (such as signatures and exposures) can be extracted from this
object using \code{\link{retrieve_pars}}.
If a range of numbers of signatures is provided via the \code{nsignatures} argument, a list is returned where
the N-th element contains the extraction results for N signatures, as a list with the structure described above.
}
\description{
\code{extract_signatures} runs MCMC sampling to extract a set of mutational signatures
and their exposures from a collection of mutational catalogues.
}
\examples{
# Load example mutational catalogues
data("counts_21breast")

# Extract 2 to 6 signatures using the NMF (multinomial) model
# (400 warmup iterations + 400 sampling iterations - use more in practice)
samples_nmf <- extract_signatures(counts_21breast, nsignatures = 2:6,
                                  model = "nmf", iter = 800)

# Extract 4 signatures using the EMu (Poisson) model
# (400 warmup iterations + 800 sampling iterations - use more in practice)
samples_emu <- extract_signatures(counts_21breast, nsignatures = 4, model = "emu",
                                  opportunities = "human-genome",
                                  iter = 1200, warmup = 400)
}
